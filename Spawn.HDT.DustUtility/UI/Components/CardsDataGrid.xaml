<UserControl x:Class="Spawn.HDT.DustUtility.UI.Components.CardsDataGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:Spawn.HDT.DustUtility.Converters"
             xmlns:util="clr-namespace:Spawn.HearthPwnScraper.Utilities"
             mc:Ignorable="d" x:Name="cardsGrid"
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <DataGrid Name="dataGrid" ItemsSource="{Binding ElementName=cardsGrid, Path=GridItems}" CanUserSortColumns="False" AutoGenerateColumns="False" IsReadOnly="True" GridLinesVisibility="None">
            <!--RowBackground="#ECE3CA" AlternatingRowBackground="#E1D7BD" MouseMove="OnDataGridMouseMove"-->
            <DataGrid.Resources>
                <converters:CountLabelConverter x:Key="countLabelConverter"/>
                <util:CardRarityToColorConverter x:Key="rarityConverter"/>
                <Style TargetType="DataGridCell">
                    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{x:Null}"/>
                            <Setter Property="BorderBrush" Value="{x:Null}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Count" Binding="{Binding Path=Count, Converter={StaticResource countLabelConverter}}"/>
                <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="{Binding Rarity, Converter={StaticResource rarityConverter}}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Mana Cost" Binding="{Binding Path=ManaCost}"/>
                <DataGridCheckBoxColumn Header="Golden" Binding="{Binding Path=Golden}"/>
                <DataGridTextColumn Header="Dust" Binding="{Binding Path=Dust}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="{Binding Rarity, Converter={StaticResource rarityConverter}}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Rarity" Binding="{Binding Path=RarityString}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="{Binding Rarity, Converter={StaticResource rarityConverter}}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Class" Binding="{Binding Path=CardClass}"/>
                <DataGridTextColumn Header="Set" Binding="{Binding Path=CardSet}"/>
            </DataGrid.Columns>
            <!--<DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="ui:AttachedProperties.RowPopup" Value="{Binding ElementName=cardImagePopup}"/>
                    <Setter Property="ui:AttachedProperties.ShowPopup" Value="{Binding IsMouseOver, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="ui:AttachedProperties.RowPopupCardWrapper" Value="{Binding Path=Tag}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="ui:AttachedProperties.RowPopupCardWrapper" Value="{x:Null}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>-->
        </DataGrid>
    </Grid>
</UserControl>