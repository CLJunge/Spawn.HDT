<UserControl x:Class="Spawn.HDT.DustUtility.UI.Controls.CardsDataGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="clr-namespace:Spawn.HDT.DustUtility.UI.Converters"
             xmlns:local="clr-namespace:Spawn.HDT.DustUtility.UI.Controls"
             mc:Ignorable="d" x:Name="cardsGrid"
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <DataGrid Name="dataGrid" ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:CardsDataGrid}}, Path=ItemsSource, Mode=OneWay}"
                  CanUserSortColumns="False" AutoGenerateColumns="False" IsReadOnly="True"
                  SelectionMode="Single" SelectionUnit="FullRow" GridLinesVisibility="None"
                  MouseDoubleClick="OnDataGridMouseDoubleClick" MouseDown="OnDataGridMouseDown"
                  MouseMove="OnDataGridMouseMove" PreviewMouseLeftButtonDown="OnDataGridPreviewMouseLeftButtonDown"
                  DragEnter="OnDataGridDragEnter" Drop="OnDataGridDrop" ContextMenuOpening="OnContextMenuOpening"
                  SelectionChanged="OnDataGridSelectionChanged">
            <!--RowBackground="#ECE3CA" AlternatingRowBackground="#E1D7BD"-->
            <DataGrid.Resources>
                <converters:CountLabelConverter x:Key="countLabelConverter"/>
                <converters:CountToColorConverter x:Key="countToColorConverter"/>
                <converters:CardRarityToColorConverter x:Key="rarityConverter"/>
                <converters:CardClassToImageConverter x:Key="cardClassConverter"/>
                <converters:CardSetToImageConverter x:Key="cardSetConverter"/>
                <converters:CardNameConverter x:Key="cardNameConverter"/>
                <Style TargetType="DataGridCell">
                    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                </Style>
                <ContextMenu x:Key="rowContextMenu">
                    <ContextMenu.Items>
                        <MenuItem Header="Remove" Click="OnDeleteRowClick"/>
                    </ContextMenu.Items>
                </ContextMenu>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Count">
                    <DataGridTextColumn.Binding>
                        <MultiBinding Converter="{StaticResource countLabelConverter}">
                            <Binding Path="Count"/>
                            <Binding ElementName="cardsGrid" Path="ColoredCountColumn"/>
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource countToColorConverter}">
                                        <Binding Path="Count"/>
                                        <Binding ElementName="cardsGrid" Path="ColoredCountColumn"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="{Binding Path=Golden, Converter={StaticResource cardNameConverter}}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Mana" Binding="{Binding Path=ManaCost}"/>
                <DataGridCheckBoxColumn Header="Golden" Binding="{Binding Path=Golden}"/>
                <DataGridTextColumn Header="Dust" Binding="{Binding Path=Dust}"/>
                <DataGridTextColumn Header="Rarity" Binding="{Binding Path=RarityString}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="{Binding Rarity, Converter={StaticResource rarityConverter}}"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!--<DataGridTextColumn Header="Class" Binding="{Binding Path=CardClass}"/>-->
                <DataGridTemplateColumn Header="Class">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding Path=CardClass, Converter={StaticResource cardClassConverter}}" Width="20" Height="20"/>
                                <TextBlock Text="{Binding Path=CardClass}" VerticalAlignment="Center" Margin="2,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--<DataGridTextColumn Header="Set" Binding="{Binding Path=CardSet}"/>-->
                <DataGridTemplateColumn Header="Set">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{Binding Path=CardSet, Converter={StaticResource cardSetConverter}}" Width="20" Height="20"/>
                                <TextBlock Text="{Binding Path=CardSetString}" VerticalAlignment="Center" Margin="2,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="ContextMenu" Value="{StaticResource rowContextMenu}"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#0099ff"/>
                            <Setter Property="BorderBrush" Value="#006bb3"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <!--<Setter Property="TextBlock.TextAlignment" Value="Center"/>-->
                    <Setter Property="BorderThickness" Value="0"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{x:Null}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
        </DataGrid>

        <Popup Name="cardImagePopup" AllowsTransparency="True" PlacementTarget="{Binding ElementName=dataGrid}" Placement="Center" IsOpen="False" MouseDown="OnPopupMouseDown">
            <local:CardImageContainer x:Name="cardImageContainer"/>
        </Popup>
    </Grid>
</UserControl>
