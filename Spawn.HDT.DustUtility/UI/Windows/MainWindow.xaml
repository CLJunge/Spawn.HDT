<controls:MetroWindow x:Class="Spawn.HDT.DustUtility.UI.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:vm="clr-namespace:Spawn.HDT.DustUtility.UI.ViewModels"
        xmlns:flyouts="clr-namespace:Spawn.HDT.DustUtility.UI.Flyouts"
        xmlns:uicontrols="clr-namespace:Spawn.HDT.DustUtility.UI.Controls"
        mc:Ignorable="d" ResizeMode="CanResize" BorderBrush="{DynamicResource AccentColorBrush}"
        Height="550" Width="1100" MinHeight="550" MinWidth="1100" WindowStartupLocation="CenterScreen"
        Title="{Binding WindowTitle}" WindowButtonCommandsOverlayBehavior="Never"
        RightWindowCommandsOverlayBehavior="Never" LeftWindowCommandsOverlayBehavior="Never"
        Closing="OnClosing" GlowBrush="Black">
    <Window.Resources>
        <ResourceDictionary>
            <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True"/>
            <Style x:Key="CustomButtonStyle" BasedOn="{StaticResource AccentedSquareButtonStyle}" TargetType="{x:Type Button}">
                <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
            </Style>
            <Style x:Key="GridSplitterPreviewStyle" >
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Fill="{DynamicResource AccentColorBrush}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CustomGridSplitterStyle" TargetType="{x:Type GridSplitter}">
                <Setter Property="Background"
                        Value="{DynamicResource AccentColorBrush}"/>
                <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridSplitter}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="2">
                                <Canvas RenderOptions.EdgeMode="Aliased" UseLayoutRounding="True"
                                        Width="75" Height="5" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Line X1="0" X2="75" Y1="0" Y2="0" Stroke="{DynamicResource HighlightBrush}" StrokeThickness="1"/>
                                    <Line X1="0" X2="75" Y1="1" Y2="1" Stroke="{DynamicResource AccentBaseColorBrush}" StrokeThickness="1"/>

                                    <Line X1="0" X2="75" Y1="4" Y2="4" Stroke="{DynamicResource AccentBaseColorBrush}" StrokeThickness="1"/>
                                    <Line X1="0" X2="75" Y1="5" Y2="5" Stroke="{DynamicResource HighlightBrush}" StrokeThickness="1"/>
                                </Canvas>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Spawn.HDT.DustUtility;component/Resources/Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <Binding Path="Main" Source="{StaticResource Locator}"/>
    </Window.DataContext>
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button Command="{Binding SwitchAccountCommand}" Visibility="{Binding SwitchAccountButtonVisibility}">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20" Height="20">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="{DynamicResource UserIcon}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="SWITCH ACCOUNT..." VerticalAlignment="Center" Margin="5,0,0,0"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding OpenFlyoutCommand}" CommandParameter="{Binding ElementName=HistoryFlyout}" Visibility="{Binding HistoryButtonVisibility}">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="18" Height="18">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="{DynamicResource ClockIcon}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="HISTORY" VerticalAlignment="Center" Margin="5,0,0,0"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding OpenFlyoutCommand}" CommandParameter="{Binding ElementName=DecksFlyout}">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20" Height="20">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="{DynamicResource LayersIcon}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="DECKS" VerticalAlignment="Center" Margin="5,0,0,0"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding OpenFlyoutCommand}" CommandParameter="{Binding ElementName=CollectionInfoFlyout}">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="18" Height="18">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="{DynamicResource InfoIcon}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="COLLECTION INFO" VerticalAlignment="Center" Margin="5,0,0,0"/>
                </StackPanel>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout Name="HistoryFlyout" Header="History" Position="Top">
                <flyouts:HistoryFlyoutView x:Name="HistoryFlyoutView"/>
            </controls:Flyout>
            <controls:Flyout Name="UpdateFlyout" Header="New Version Available" Position="Bottom">
                <flyouts:UpdateFlyoutView x:Name="UpdateFlyoutView"/>
            </controls:Flyout>
            <controls:Flyout Name="DecksFlyout" Header="Decks" Position="Right" Width="600">
                <flyouts:DecksFlyoutView x:Name="DecksFlyoutView"/>
            </controls:Flyout>
            <controls:Flyout Name="DeckListFlyout" Header="Deck List" Position="Left" Width="300">
                <flyouts:DeckListFlyoutView x:Name="DeckListFlyoutView"/>
            </controls:Flyout>
            <controls:Flyout Name="SearchParametersFlyout" Header="Filters" Position="Left">
                <flyouts:SearchParametersFlyoutView x:Name="SearchParametersFlyoutView"/>
            </controls:Flyout>
            <controls:Flyout Name="SortOrderFlyout" Header="Sort Order" Position="Right" Width="250">
                <flyouts:SortOrderFlyoutView x:Name="SortOrderFlyoutView"/>
            </controls:Flyout>
            <controls:Flyout Name="CollectionInfoFlyout" Header="Collection Info" Position="Left">
                <flyouts:CollectionInfoFlyout x:Name="CollectionInfoFlyoutView"/>
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>
    <Grid>
        <TextBox Style="{DynamicResource MetroButtonTextBox}" Text="{Binding SearchQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                 HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="15,10,205,0" Height="28"
                 controls:TextBoxHelper.Watermark="Enter dust amount or search term..."
                 controls:TextBoxHelper.ButtonCommand="{Binding SearchCommand}">
            <TextBox.InputBindings>
                <KeyBinding Command="{Binding Path=SearchCommand}" Key="Enter" />
            </TextBox.InputBindings>
            <controls:TextBoxHelper.ButtonContent>
                <ContentControl Width="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=(controls:TextBoxHelper.ButtonWidth), Mode=OneWay}"
                                Height="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=(controls:TextBoxHelper.ButtonWidth), Mode=OneWay}"
                                Padding="3" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource PathIconContentControlStyle}"
                                Content="M42.5,22A12.5,12.5 0 0,1 55,34.5A12.5,12.5 0 0,1 42.5,47C40.14,47 37.92,46.34 36,45.24L26.97,54.27C25.8,55.44 23.9,55.44 22.73,54.27C21.56,53.1 21.56,51.2 22.73,50.03L31.8,40.96C30.66,39.08 30,36.86 30,34.5A12.5,12.5 0 0,1 42.5,22M42.5,26A8.5,8.5 0 0,0 34,34.5A8.5,8.5 0 0,0 42.5,43A8.5,8.5 0 0,0 51,34.5A8.5,8.5 0 0,0 42.5,26Z"/>
            </controls:TextBoxHelper.ButtonContent>
        </TextBox>
        <Button Style="{DynamicResource CustomButtonStyle}" Content="X" Command="{Binding ClearCommand}"
                HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,175,0" Width="25" Height="28"/>

        <Button Style="{DynamicResource CustomButtonStyle}" Content="?" Command="{Binding ShowSearchHelpCommand}"
                HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,140,0" Width="25" Height="28"/>
        <Button Style="{DynamicResource CustomButtonStyle}" Content="Filters"
                Command="{Binding OpenFlyoutCommand}" CommandParameter="{Binding ElementName=SearchParametersFlyout}"
                HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,10,15,0" Width="120" Height="28"/>
        <Button Style="{DynamicResource CustomButtonStyle}" Content="Sort order"
                Command="{Binding OpenFlyoutCommand}" CommandParameter="{Binding ElementName=SortOrderFlyout}"
                HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,43,15,0" Width="150" Height="28"/>

        <Grid Margin="15,43,175,15" Visibility="{Binding DefaultViewVisibility}">
            <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1">
                <uicontrols:CardsContainer ItemsSource="{Binding CardItems}" AllowDrop="False" AllowDrag="True" ContextMenuEnabled="False"/>
            </Border>
        </Grid>
        <Grid Margin="15,43,175,15" Visibility="{Binding SplitViewVisibility}">
            <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="15"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <uicontrols:CardsContainer Grid.Row="0" ItemsSource="{Binding CardItems}" AllowDrop="False" AllowDrag="True" ContextMenuEnabled="False"/>
                    <GridSplitter Style="{DynamicResource CustomGridSplitterStyle}" Grid.Row="1" ResizeDirection="Rows" Background="{DynamicResource AccentColorBrush}" HorizontalAlignment="Stretch"/>
                    <uicontrols:CardsContainer Grid.Row="2" ItemsSource="{Binding Path=CardSelection.CardItems}" AllowDrop="True" AllowDrag="False" ContextMenuEnabled="True" ItemDropped="OnItemDropped" RemoveCardItem="OnRemoveCardItem"/>
                </Grid>
            </Border>
        </Grid>

        <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,71,10,0" Visibility="{Binding DefaultViewVisibility}">
            <uicontrols:CardsInfoView DataContext="{Binding CardsInfo}" Title="Info"/>
        </Grid>
        <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,71,10,0" Visibility="{Binding SplitViewVisibility}">
            <uicontrols:CardsInfoView DataContext="{Binding Path=CardSelection.CardsInfo}" Title="Selection"/>
        </Grid>

        <Button Style="{DynamicResource CustomButtonStyle}" Content="Selection"
                Command="{Binding OpenCardSelectionWindowCommand}" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                Margin="0,0,15,15" Width="150" Height="28" Visibility="{Binding DefaultViewVisibility}"/>

        <Button Style="{DynamicResource CustomButtonStyle}" Content="Import latest pack" Command="{Binding ImportLatestPackCommand}"
                HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,336,15,0" Width="150" Height="28" Visibility="{Binding SplitViewVisibility}"/>
        <Button Style="{DynamicResource CustomButtonStyle}" Content="Disenchant Selection" Command="{Binding DisenchantSelectionCommand}"
                HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,369,15,0" Width="150" Height="28" Visibility="{Binding Path=CardSelection.DisenchantButtonVisibility}"/>

        <Button Style="{DynamicResource CustomButtonStyle}" Content="Clear Selection" Command="{Binding ClearSelectionCommand}"
                HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,15,15" Width="150" Height="28" Visibility="{Binding SplitViewVisibility}"/>
    </Grid>
</controls:MetroWindow>
